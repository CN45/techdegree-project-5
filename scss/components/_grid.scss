// Grid using Flexbox
// Grid Columns
// ==========================================================================
// ==========================================================================
// Grid Container
// ==========================================================================

.grid {
  @extend %clearfix;
  @extend .centered;
  width: 90%;

  //make nested grid container 100% target grid containers inside columns

  [class*="grid__col--"] > & {
    width:100%
  }
  // set max width for grid container

  @media (min-width: 1100px) {
    max-width: $g-cont-max-w;
  }
}
.container {
  @extend %center-element;
  width: 90%;
  font-family: $font-family--primary;
  }


//add colors to the grid
.theme__colors.grid {
    &__col {
      width: 100%;
      @include bg-colors($col-colors);
    }
    }

// Calculate grid columns from class thank you Guil

@media (min-width: 769px) {
  @for $i from 1 through $g-col-count {
    $context: g-context($g-col-width, $g-col-count ,$g-gutter-width) !global;
    $target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1));

    // Generate column modifier classes
    .grid__col--#{$i} {
      width: percentage($target / $context);
    }
  }
}

// Column styles
//Target all elements that begin with grid__col
[class^="grid__col--"] {
  @media (min-width: 1px) and (max-width: 768px) {
    margin-top: em(12px);
    margin-bottom: em(12px);
  }
  @media (min-width: 769px) {
    @include doubly(percentage($g-gutter-width / $context));
    float: left;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    &:last-of-type {
      float: right;
    }
  }
}
//Mobile first
